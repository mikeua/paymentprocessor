<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
    <!-- Payment Method Facade configuration -->
    <virtualType name="PaymentProcessorFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">Mike\PaymentProcessor\Model\Ui\ConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form\Cc</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="valueHandlerPool" xsi:type="object">PaymentProcessorValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">PaymentProcessorCommandPool</argument>
            <argument name="validatorPool" xsi:type="object">PaymentProcessorValidatorPool</argument>
        </arguments>
    </virtualType>
    <!-- PaymentProcessor credit card validators infrastructure -->
     <virtualType name="PaymentProcessorCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">Mike\PaymentProcessor\Gateway\Config\Config</argument>
        </arguments>
    </virtualType>
    <virtualType name="PaymentProcessorValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">PaymentProcessorCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Vault Method Facade configuration -->
    <virtualType name="PaymentProcessorCreditCardVaultFacade" type="Magento\Vault\Model\Method\Vault">
        <arguments>
            <argument name="code" xsi:type="const">Mike\PaymentProcessor\Model\Ui\ConfigProvider::CC_VAULT_CODE</argument>
            <argument name="config" xsi:type="object">PaymentProcessorVaultPaymentConfig</argument>
            <argument name="valueHandlerPool" xsi:type="object">PaymentProcessorVaultPaymentValueHandlerPool</argument>
            <!--<argument name="valueHandlerPool" xsi:type="object">PaymentProcessorValueHandlerPool</argument>-->
            <argument name="vaultProvider" xsi:type="object">PaymentProcessorFacade</argument>
            <argument name="commandManagerPool" xsi:type="object">PaymentProcessorCcVaultCommandManagerPool</argument>
        </arguments>
    </virtualType>
    <virtualType name="PaymentProcessorVaultPaymentConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">Mike\PaymentProcessor\Model\Ui\ConfigProvider::CC_VAULT_CODE</argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentProcessorVaultPaymentValueHandler" type="VaultPaymentDefaultValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">PaymentProcessorVaultPaymentConfig</argument>
        </arguments>
    </virtualType>
    <virtualType name="PaymentProcessorVaultPaymentValueHandlerPool" type="VaultPaymentValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">PaymentProcessorVaultPaymentValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentProcessorCcVaultCommandManagerPool" type="Magento\Payment\Gateway\Command\CommandManagerPool">
        <arguments>
            <argument name="executors" xsi:type="array">
                <item name="paymentprocessor" xsi:type="string">PaymentProcessorCommandManager</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- END Configuration for Vault payments -->
    <!-- Command managers section for Vault -->
    <virtualType name="PaymentProcessorCommandManager" type="Magento\Payment\Gateway\Command\CommandManager">
        <arguments>
            <argument name="commandPool" xsi:type="object">PaymentProcessorCommandPool</argument>
        </arguments>
    </virtualType>
    <!-- END command managers section for Vault -->
    <!-- Configuration reader -->
    <type name="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">Mike\PaymentProcessor\Model\Ui\ConfigProvider::CODE</argument>
        </arguments>
    </type>
    <!-- Logger, initialized with PaymentProcessorConfig -->
    <virtualType name="PaymentProcessorLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">Mike\PaymentProcessor\Gateway\Config\Config</argument>
        </arguments>
    </virtualType>
    <type name="Mike\PaymentProcessor\Gateway\Http\Client\Client">
        <arguments>
            <argument name="logger" xsi:type="object">PaymentProcessorLogger</argument>
        </arguments>
    </type>
    <type name="Mike\PaymentProcessor\Gateway\Request\RefundRequest">
        <arguments>
            <argument name="logger" xsi:type="object">PaymentProcessorLogger</argument>
        </arguments>
    </type>
    <type name="Mike\PaymentProcessor\Gateway\Validator\ResponseCodeValidator">
        <arguments>
            <argument name="logger" xsi:type="object">PaymentProcessorLogger</argument>
        </arguments>
    </type>
    <type name="Mike\PaymentProcessor\Gateway\Response\RefundHandler">
        <arguments>
            <argument name="logger" xsi:type="object">PaymentProcessorLogger</argument>
        </arguments>
    </type>
    <type name="Mike\PaymentProcessor\Gateway\Response\VaultHandler">
        <arguments>
            <argument name="logger" xsi:type="object">PaymentProcessorLogger</argument>
        </arguments>
    </type>
    <!-- Commands infrastructure -->
    <virtualType name="PaymentProcessorCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="authorize" xsi:type="string">PaymentProcessorAuthorizeCommand</item>
                <item name="vault_authorize" xsi:type="string">PaymentProcessorVaultAuthorizeCommand</item>
                <item name="capture" xsi:type="string">PaymentProcessorCaptureCommand</item>
                <item name="vault_sale" xsi:type="string">PaymentProcessorVaultSaleCommand</item>
                <item name="void" xsi:type="string">PaymentProcessorVoidCommand</item>
                <item name="refund" xsi:type="string">PaymentProcessorRefundCommand</item>
                <item name="cancel" xsi:type="string">PaymentProcessorCancelCommand</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Vault Authorize command -->
    <virtualType name="PaymentProcessorVaultAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">PaymentProcessorVaultAuthorizationRequest</argument>
            <argument name="handler" xsi:type="object">PaymentProcessorResponseHandler</argument>
            <argument name="transferFactory" xsi:type="object">Mike\PaymentProcessor\Gateway\Http\TransferFactory</argument>
            <argument name="validator" xsi:type="object">Mike\PaymentProcessor\Gateway\Validator\ResponseCodeValidator</argument>
            <argument name="client" xsi:type="object">Mike\PaymentProcessor\Gateway\Http\Client\Client</argument>
            <argument name="errorMessageMapper" xsi:type="object">Mike\PaymentProcessor\Gateway\ErrorMapper\VirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!--Vault Authorization Request -->
    <virtualType name="PaymentProcessorVaultAuthorizationRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">Mike\PaymentProcessor\Gateway\Request\VaultAuthorizeRequest</item>
                <item name="Data" xsi:type="string">Mike\PaymentProcessor\Gateway\Request\DataRequest</item>
                <item name="Base" xsi:type="string">Mike\PaymentProcessor\Gateway\Request\BaseRequest</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Vault Sale command -->
    <virtualType name="PaymentProcessorVaultSaleCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">PaymentProcessorVaultSaleRequest</argument>
            <argument name="handler" xsi:type="object">PaymentProcessorResponseHandler</argument>
            <argument name="transferFactory" xsi:type="object">Mike\PaymentProcessor\Gateway\Http\TransferFactory</argument>
            <argument name="validator" xsi:type="object">Mike\PaymentProcessor\Gateway\Validator\ResponseCodeValidator</argument>
            <argument name="client" xsi:type="object">Mike\PaymentProcessor\Gateway\Http\Client\Client</argument>
            <argument name="errorMessageMapper" xsi:type="object">Mike\PaymentProcessor\Gateway\ErrorMapper\VirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!--Vault Sale Request -->
    <virtualType name="PaymentProcessorVaultSaleRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">Mike\PaymentProcessor\Gateway\Request\VaultSaleRequest</item>
                <item name="Data" xsi:type="string">Mike\PaymentProcessor\Gateway\Request\DataRequest</item>
                <item name="Base" xsi:type="string">Mike\PaymentProcessor\Gateway\Request\BaseRequest</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Authorize command -->
    <virtualType name="PaymentProcessorAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">PaymentProcessorAuthorizationRequest</argument>
            <argument name="handler" xsi:type="object">PaymentProcessorVaultResponseHandler</argument>
            <argument name="transferFactory" xsi:type="object">Mike\PaymentProcessor\Gateway\Http\TransferFactory</argument>
            <argument name="validator" xsi:type="object">Mike\PaymentProcessor\Gateway\Validator\ResponseCodeValidator</argument>
            <argument name="client" xsi:type="object">Mike\PaymentProcessor\Gateway\Http\Client\Client</argument>
            <argument name="errorMessageMapper" xsi:type="object">Mike\PaymentProcessor\Gateway\ErrorMapper\VirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!-- Authorization Request -->
    <virtualType name="PaymentProcessorAuthorizationRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">Mike\PaymentProcessor\Gateway\Request\AuthorizationRequest</item>
                <item name="Data" xsi:type="string">Mike\PaymentProcessor\Gateway\Request\DataRequest</item>
                <item name="Base" xsi:type="string">Mike\PaymentProcessor\Gateway\Request\BaseRequest</item>
            </argument>
        </arguments>
    </virtualType>
    <type name="Mike\PaymentProcessor\Gateway\Request\BaseRequest">
        <arguments>
            <argument name="config" xsi:type="object">Mike\PaymentProcessor\Gateway\Config\Config</argument>
        </arguments>
    </type>
    <!-- Capture command -->
    <virtualType name="PaymentProcessorCaptureCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">PaymentProcessorCaptureRequest</argument>
            <argument name="handler" xsi:type="object">PaymentProcessorVaultResponseHandler</argument>
            <argument name="transferFactory" xsi:type="object">Mike\PaymentProcessor\Gateway\Http\TransferFactory</argument>
            <argument name="validator" xsi:type="object">Mike\PaymentProcessor\Gateway\Validator\ResponseCodeValidator</argument>
            <argument name="client" xsi:type="object">Mike\PaymentProcessor\Gateway\Http\Client\Client</argument>
            <argument name="errorMessageMapper" xsi:type="object">Mike\PaymentProcessor\Gateway\ErrorMapper\VirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!-- Capture Request -->
    <virtualType name="PaymentProcessorCaptureRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">Mike\PaymentProcessor\Gateway\Request\CaptureRequest</item>
                <item name="Data" xsi:type="string">Mike\PaymentProcessor\Gateway\Request\DataRequest</item>
                <item name="Base" xsi:type="string">Mike\PaymentProcessor\Gateway\Request\BaseRequest</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Void command -->
    <virtualType name="PaymentProcessorVoidCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">PaymentProcessorVoidRequest</argument>
            <argument name="handler" xsi:type="object">Mike\PaymentProcessor\Gateway\Response\VoidHandler</argument>
            <argument name="transferFactory" xsi:type="object">Mike\PaymentProcessor\Gateway\Http\TransferFactory</argument>
            <argument name="validator" xsi:type="object">Mike\PaymentProcessor\Gateway\Validator\ResponseCodeValidator</argument>
            <argument name="client" xsi:type="object">Mike\PaymentProcessor\Gateway\Http\Client\Client</argument>
            <argument name="errorMessageMapper" xsi:type="object">Mike\PaymentProcessor\Gateway\ErrorMapper\VirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!-- Void Request -->
    <virtualType name="PaymentProcessorVoidRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">Mike\PaymentProcessor\Gateway\Request\VoidRequest</item>
                <item name="Base" xsi:type="string">Mike\PaymentProcessor\Gateway\Request\BaseRequest</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Refund command -->
    <virtualType name="PaymentProcessorRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">PaymentProcessorRefundRequest</argument>
            <argument name="handler" xsi:type="object">Mike\PaymentProcessor\Gateway\Response\RefundHandler</argument>
            <argument name="transferFactory" xsi:type="object">Mike\PaymentProcessor\Gateway\Http\TransferFactory</argument>
            <argument name="validator" xsi:type="object">Mike\PaymentProcessor\Gateway\Validator\ResponseCodeValidator</argument>
            <argument name="client" xsi:type="object">Mike\PaymentProcessor\Gateway\Http\Client\Client</argument>
            <argument name="errorMessageMapper" xsi:type="object">Mike\PaymentProcessor\Gateway\ErrorMapper\VirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!-- Refund Request -->
    <virtualType name="PaymentProcessorRefundRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">Mike\PaymentProcessor\Gateway\Request\RefundRequest</item>
                <item name="Base" xsi:type="string">Mike\PaymentProcessor\Gateway\Request\BaseRequest</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Cancel command -->
    <virtualType name="PaymentProcessorCancelCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">PaymentProcessorCancelRequest</argument>
            <argument name="handler" xsi:type="object">Mike\PaymentProcessor\Gateway\Response\VoidHandler</argument>
            <argument name="transferFactory" xsi:type="object">Mike\PaymentProcessor\Gateway\Http\TransferFactory</argument>
            <argument name="validator" xsi:type="object">Mike\PaymentProcessor\Gateway\Validator\ResponseCodeValidator</argument>
            <argument name="client" xsi:type="object">Mike\PaymentProcessor\Gateway\Http\Client\Client</argument>
            <argument name="errorMessageMapper" xsi:type="object">Mike\PaymentProcessor\Gateway\ErrorMapper\VirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!-- Cancel Request -->
    <virtualType name="PaymentProcessorCancelRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">Mike\PaymentProcessor\Gateway\Request\CancelRequest</item>
                <item name="Base" xsi:type="string">Mike\PaymentProcessor\Gateway\Request\BaseRequest</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Error Mapping -->
    <virtualType name="Mike\PaymentProcessor\Gateway\ErrorMapper\VirtualConfigReader" type="Magento\Payment\Gateway\ErrorMapper\VirtualConfigReader">
        <arguments>
            <argument name="fileName" xsi:type="string">paymentprocessor_error_mapping.xml</argument>
        </arguments>
    </virtualType>
    <virtualType name="Mike\PaymentProcessor\Gateway\ErrorMapper\VirtualMappingData" type="Magento\Payment\Gateway\ErrorMapper\MappingData">
        <arguments>
            <argument name="reader" xsi:type="object">Mike\PaymentProcessor\Gateway\ErrorMapper\VirtualConfigReader</argument>
            <argument name="cacheId" xsi:type="string">paymentprocessor_error_mapper</argument>
        </arguments>
    </virtualType>

    <virtualType name="Mike\PaymentProcessor\Gateway\ErrorMapper\VirtualErrorMessageMapper" type="Magento\Payment\Gateway\ErrorMapper\ErrorMessageMapper">
        <arguments>
            <argument name="messageMapping" xsi:type="object">Mike\PaymentProcessor\Gateway\ErrorMapper\VirtualMappingData</argument>
        </arguments>
    </virtualType>
    <!-- Response handlers -->
    <!-- Value handlers infrastructure -->
    <type name="Mike\PaymentProcessor\Gateway\Response\VaultHandler">
        <arguments>
            <argument name="paymentTokenFactory" xsi:type="object">Magento\Vault\Model\PaymentTokenFactory</argument>
        </arguments>
    </type>
    <virtualType name="PaymentProcessorConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Mike\PaymentProcessor\Gateway\Config\Config</argument>
        </arguments>
    </virtualType>
    <virtualType name="PaymentProcessorResponseHandler" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="txnid" xsi:type="string">Mike\PaymentProcessor\Gateway\Response\TxnIdHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="PaymentProcessorVaultResponseHandler" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="txnid" xsi:type="string">Mike\PaymentProcessor\Gateway\Response\TxnIdHandler</item>
                <item name="vault" xsi:type="string">Mike\PaymentProcessor\Gateway\Response\VaultHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="PaymentProcessorValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">PaymentProcessorConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Value handlers infrastructure -->
    <type name="Magento\Payment\Block\Info\Cc">
        <arguments>
            <argument name="data" xsi:type="array">
                <item xsi:type="string" name="is_secure_mode">1</item>
            </argument>
        </arguments>
    </type>
    <type name="Magento\Payment\Block\Form\Cc">
        <arguments>
            <argument name="data" xsi:type="array">
                <item xsi:type="string" name="is_secure_mode">1</item>
            </argument>
        </arguments>
    </type>
</config>
